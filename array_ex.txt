# INPUT DATA
#------------

Thursday,28

Sunday,8

Friday,42

Friday,6

Saturday,8

Thursday,12

Monday,12

Sunday,40

Saturday,50

Sunday,10

Saturday,1


# MAPREDUCE PROGRAM
#------------------

package mapreducewitharray.Arrays;

import java.io.IOException;

import java.util.ArrayList;

import java.util.Collections;

import java.util.StringTokenizer;

import org.apache.hadoop.conf.Configuration;

import org.apache.hadoop.fs.Path;

import org.apache.hadoop.io.IntWritable;

import org.apache.hadoop.io.Text;

import org.apache.hadoop.mapreduce.Job;

import org.apache.hadoop.mapreduce.Mapper;

import org.apache.hadoop.mapreduce.Reducer;

import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;

import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class MinTemperature {

public static class TokenizerMapper

      extends Mapper{

   public void map(Object key, Text value, Context context

                   ) throws IOException, InterruptedException {

     String[] day_temp=value.toString().split(",");

     context.write(new Text(day_temp[0]), new IntWritable(Integer.parseInt(day_temp[1])));

   }

 }

 public static class IntSumReducer extends Reducer {

public void reduce(Text key, Iterable values,Context context) throws IOException, InterruptedException {

          ArrayList sorted=new ArrayList();

    for (IntWritable val : values) {

         sorted.add(val.get());

     }

     Collections.sort(sorted);

          int[] top5_cold_days=new int[5];

                 for (int i=0;i 

                 {

                         top5_cold_days[i]=sorted.get(i);

                 }        

               String temp="";

               for (int i=0;i 

                {

                        temp=temp+top5_cold_days[i]+"\t";

                }

                context.write(key, new Text(temp));

}

   }

  public static void main(String[] args) throws Exception {

   Configuration conf = new Configuration();

   Job job = Job.getInstance(conf, "word count");

   job.setJarByClass(MinTemperature.class);

   job.setMapperClass(TokenizerMapper.class);

   job.setReducerClass(IntSumReducer.class);

   job.setMapOutputKeyClass(Text.class);

   job.setMapOutputValueClass(IntWritable.class);

   job.setOutputKeyClass(Text.class);

   job.setOutputValueClass(Text.class);

   FileInputFormat.addInputPath(job, new Path("/home/dezyre/Downloads/temperature.csv"));

   FileOutputFormat.setOutputPath(job, new Path("/home/dezyre/Downloads/temperature.out"));

   System.exit(job.waitForCompletion(true) ? 0 : 1);

 }

}
